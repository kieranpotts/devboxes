# -*- mode: ruby -*-
# vi: set ft=ruby :

# ------------------------------------------------------------------------------
# Vagrant configuration file.
#
# The most common configuration options are documented in inline comments below.
# @see //docs.vagrantup.com/
# ------------------------------------------------------------------------------

# Specify the minimum Vagrant version required.
Vagrant.require_version ">= 2.2.0"

# This file is compatible with version 2
# of the Vagrantfile standard.
VAGRANTFILE_API_VERSION = "2"

# Load settings from `vagrant.yaml`.
require 'yaml'
if File.exist?("vagrant.yaml")
  configuration = YAML.load_file("vagrant.yaml")
else
  raise Vagrant::Errors::VagrantError.new, "vagrant.yaml not found"
end

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # Base box.
  config.vm.box = "kieranpotts/nodejs14"

  # Optionally, constrain base box updates to a particular major version.
  # config.vm.box_version = ">= 1.0, < 2.0"

  # Keep the base box up-to-date automatically? If you disable this, the
  # base box will be updated only when you run `vagrant box outdated`.
  config.vm.box_check_update = true

  # VirtualBox-specific settings.
  config.vm.provider "virtualbox" do |vb|

    # GUI versus headless.
    vb.gui = configuration["guest"]["gui"]

    # A unique name to identify the guest machine.
    vb.name = configuration["guest"]["name"]

    # Allocate CPU cores and memory.
    vb.customize ["modifyvm", :id, "--cpus", configuration["guest"]["cpus"]]
    vb.customize ["modifyvm", :id, "--memory", configuration["guest"]["memory"]]

    # Stop Vagrant from hanging when using private keys for SSH auth.
    # @see //github.com/hashicorp/vagrant/issues/8157#issuecomment-304492943
    vb.customize ["modifyvm", :id, "--cableconnected1", "on"]

    # By default, Virtualbox doesn't allow symlinks on shared folders (for
    # security reasons). But installers for Node commonly create bin
    # symlinks. Windows users must also boot the VM from a terminal
    # "running as Administrator" for this to work.
    vb.customize ["setextradata", :id, "VBoxInternal2/SharedFoldersEnableSymlinksCreate//v-root", "1"]

    # Set the timesync threshold to 10 seconds, instead of the default 20
    # minutes. This ensures that the VM's clock is kept closely synced with
    # the host machine's time (it can get out of sync if the laptop goes to
    # sleep, for instance).
    vb.customize ["guestproperty", "set", :id, "/VirtualBox/GuestAdd/VBoxService/--timesync-set-threshold", 10000]

  end

  # There is no need to generate a unique keypair for SSH
  # if the VM will be accessed locally only.
  config.ssh.insert_key = false

  # Allocate a local private network IP address to the VM. You can use the
  # following IP ranges:
  # - 10.0.0.1 ... 10.255.255.254
  # - 172.16.0.1 ... 172.31.255.254
  # - 192.168.0.1 ... 192.168.255.254
  config.vm.network :private_network, :ip => configuration["host"]["ip"]

  # Stop Vagrant from hanging when using private keys for SSH auth.
  # @see //github.com/hashicorp/vagrant/issues/8157#issuecomment-301292017
  config.vm.network :forwarded_port, :guest => 22, :host => 2222, :host_ip => "127.0.0.1", :id => 'ssh'

  # Port forwarding for Nginx.
  config.vm.network :forwarded_port, :guest => 80, :host => 80
  config.vm.network :forwarded_port, :guest => 443, :host => 443

  # Port forwarding for MailDev.
  config.vm.network :forwarded_port, :guest => 1025, :host => 1025 # SMTP port to catch emails
  config.vm.network :forwarded_port, :guest => 1080, :host => 1080 # Web interface

  # Port forwarding for Node.js Inspector.
  config.vm.network :forwarded_port, :guest => 9229, :host => 9229

  # Port forwarding for MongoDB.
  config.vm.network :forwarded_port, :guest => 27017, :host => 27017

  # Port forwarding for MariaDB.
  config.vm.network "forwarded_port", :guest => 3306, :host => 3306

  # Disable the default `/vagrant` directory share...
  config.vm.synced_folder ".", "/vagrant", :disabled => true

  # ... instead, map this project's root directory on the host machine to
  # `/home/vagrant/synced` inside the guest VM.
  config.vm.synced_folder ".", configuration["guest"]["synced_folder"],
    :create => true,
    :group => "vagrant", :owner => "vagrant",
    :mount_options => ["dmode=777", "fmode=666"],
    :type => "rsync"

  # Fix tty warnings while provisioning Ubuntu.
  # @see //foo-o-rama.com/vagrant--stdin-is-not-a-tty--fix.html
  config.vm.provision "fix-no-tty", type: "shell" do |script|
    script.privileged = false
    script.inline = "sudo sed -i '/tty/!s/mesg n/tty -s \\&\\& mesg n/' /root/.profile"
  end

  # Provision the server by installing system-level requirements.
  # The path to the provisioning script is local and relative to `Vagrantfile`.
  # Use `vagrant up --no-provision` to skip this.
  if File.exist?("./boot/provision.sh")
    config.vm.provision :shell, :path => "./boot/provision.sh",
      :privileged => false,
      :run => "always",
      :args => [configuration["guest"]["synced_folder"]]
  end

  # Run the startup script every time the VM is started.
  # This can be used for starting application and services.
  if File.exist?("./boot/startup.sh")
    config.vm.provision :shell, :path => "./boot/startup.sh",
      :privileged => false,
      :run => "always",
      :args => [configuration["guest"]["synced_folder"]]
  end

end
